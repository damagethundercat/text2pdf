보면 그런 패러다임 전환이 네 번이나 있었다(전자기 계산기에서 계전기식 컴퓨터로, 진공관으로, 하나의 트랜지스터로, 마지막은 집적회로로). 현재 여섯째 연산 패러다임, 즉 분자 수준의 자기조직적 삼차원 회로를 위한 초석들이 놓이고 있다. 그러니 현행 패러다임이 끝을 보인다 해서 진정한 한계라 판단하는 건 섣부르다.

*****

정보기술의 능력은 무한하진 않겠지만 거의 무한에 가까울 정도로 방대할 것이다. 태양계의 물질과 에너지는 최소한 10 cps의 연산을 뒷받침할 수 있다. 우주에 최소 10개의 항성이 있다고 하면 10 cps의 연산이 가능하다. 세스 로이드가 다른 방식으로 계산했을 때의 결과와 일치하는 수치다. 그러니 이 비판에 대한 답은 이렇다. 물론 한계가 있다. 하지만 전혀 불편이 없을 정도의 한계다.

*****

소프트웨어에 관한 비판

*****

강력한 인공지능의 현실성을 의심하는 사람들, 그리하여 특이점 자체를 의심하는 사람들은 보통 양적 성장과 질적 성장을 구분하려고 한다. 기억 용량, 처리 장치 속도, 통신 대역폭 등 양적인 역량에 해당하는 부분은 기하급수적으로 성장하고 있지만 소프트웨어는(즉 방법론과 알고리즘은) 그렇지 않다는 것이다.

*****

이를 하드웨어 대 소프트웨어 비교에 의한 비판이라 부를 수 있을 것이며, 의미 있는 비판이다. 가상현실의 개척자인 제이론 라니어는 나를 비롯한 이른바 인공지능 전체주의자들이 소프트웨어 '만능신'의 출현을 기다린다고 비판했다. 어떤 식인지는 모르겠지만 하여간 소프트웨어 발전하리라는 안이한 입장이라는 것이다. 하지만 나는 지능 소프트웨어가 어떤 길을 따라 어떻게 발전해갈 것인지 상세히 설명한 바 있다. 뇌 역분석은 라니어 등이 생각하는 것보다 훨씬 발전한 상태이고, 인간 지능의 기저에 있는 자기조직적 방법론을 훔쳐다 인공지능의 도구상자에 넣어줄 것이다. 이 얘기는 나중에 하고 지금은 소프트웨어의 발전을 비관하는 다른 견해들을 살펴보자.

*****

소프트웨어의 안정성

*****

라니어는 소프트웨어의 속성이 '다루기 어렵고 깨지기 쉬운 것이라 주장한다. 그러면서 자신이 소프트웨어를 다루느라 얼마나 애를 먹어왔는지 구구절절 소개했다. 라니어는 말한다. “상당히 복잡한 작업들을 컴퓨터에게 시켰을 때 오류나 보안 문제 없이 믿을 만하고 유연하게 처리되리라 기대해서는 안 된다. 애초에 불가능하다.” 나는 모든 소프트웨어들을 변호하고픈 마음은 없다. 하지만 복잡한 소프트웨어라고 꼭 끔찍한 고장을 일으킬 가능성이 높은 건 아니다. 전문적 임무를 수행하기 위해 설계된 복잡한 소프트웨어들이 큰 고장 없이 잘 돌아가고 있다. 비행기 착륙을 통제하는 소프트웨어, 중환자실을 감시하는 소프트웨어, 지능형 무기를 인도하는 소프트웨어, 자동 패턴 인식 기법에 따라 수십억 달러의 헤지펀드를 운용하는 소프트웨어들을 떠올려보라. 자동 착륙 인도 소프트웨어에 오류가 나서 비행기 사고가 났다는 얘기는 한번도 들어본 적 없다. 하지만 사람은 절대 그만큼 믿을 만하지 못하다.

*****

소프트웨어의 반응성

*****

라니어는 또 불평했다. “컴퓨터 사용자 인터페이스의 반응 속도는 15년 전보다 도리어 느린 것 같다…………… 대체 뭐가 문제인가?" 라니어에게 옛날 컴퓨터를 한번 써보라고 권하고 싶다. 구식 컴퓨터는 설치 자체도 어렵겠지만 그건 별개의 문제다. 얼마나 느리고, 까다롭고, 무능력한 도구였는지 라니어는 완전히 잊어버린 것 같다. 20년 전의 개인용 컴퓨터 소프트웨어로 오늘날의 작업 중 몇 가지를 한다고 상상해보자. 옛날 소프트웨어들이 질적으로나 양적으로 나았다는 것은 말도 안 되는 얘기다.

*****

요즘도 물론 설계가 잘못되었거나 반응이 느린 소프트웨어들이 있다. 하지만 대부분은 새로운 기능을 더했기 때문에 생긴 일이다. 사용자가 소프트웨어의 기능을 전혀 개선하지 않아도 좋다고 한다면 어떨까? 연산 속도와 기억 용량이 기하급수적으로 증가하므로 소프트웨어의 반응성은 문젯거리도 되지 않을 것이다. 다만 시장의 요구에 따라 기능 확장을 하지 않을 수 없는 것이다. 이십 년 전에는 검색엔진은 물론이고 월드 와이드 웹과 연동된 소프트웨어 자체가 없었다(웹 자체도 없었다). 원시적 언어, 포맷, 멀티미디어 도구 등이 있었을 뿐이다. 기능은 늘 가능한 범위의 극단을 추구하는 법이다.

*****

몇 년 혹은 수십 년 전의 소프트웨어를 낭만화하는 건 기계와의 씨름에서 좌절감을 느낄 필요가 없었던 수백 년 전의 삶을 이상화하는 것과 같다. 과거의 삶이 자유로웠을지는 모르겠다. 하지만 짧고, 노동 집약적이고, 가난하고, 질병과 재앙에 무방비였던 것도 사실이다.

*****

소프트웨어의 가격대 성능비

*****

소프트웨어의 가격대 성능비를 점검해보면 어느 모로 보나 놀랍기 그지 없다. 2장에 나왔던 음성 인식 소프트웨어의 예를 보자. 1985년에는 5천 달러를 주면 단어 천 개가 담긴 소프트웨어를 살 수 있었다. 연속 음성 인식 능력은 없고, 세 시간 동안 당신의 목소리에 훈련을 시켜야 하며, 정확도도 낮았다. 한편 2000년에는 50달러만 주면 십만 단어를 갖췄고 연속 음성 인식이 가능하며 훈련은 5분이면 충분하고 정확도도 놀랍게 향상된, 자연어를 이해하는(명령어를 편집하거나 할 수 있는 정도로) 소프트웨어를 살 수 있게 됐다.

*****

소프트웨어 개발의 생산성

*****

소프트웨어 개발은 어떤 실정일까? 나는 40년 동안 소프트웨어를 개발해왔으니 이 문제에 대해서라면 어느 정도 자신 있게 말할 수 있다. 나는 소프트웨어 개발 생산성이 매 6년마다 두 배가 된다고 보는데 이는 매년 두 배로 가격대 성능비를 늘려가는 처리 장치에 비하면 늦은 편이다. 하지만 꾸준히 기하급수적으로 증가하고 있다. 오늘날의 개발 도구, 클래스 라이브러리, 지원 체계는 수십 년 전과 비교도 할 수 없이 효과적이다. 내가 최근 수행하는 연구를 보면 25년 전에 10명 이상이 1년 이상 해야 했을 작업을 요즘은 서너 명이 몇 달 안에 해낸다.

*****

소프트웨어의 복잡성

*****

20년 전의 소프트웨어 프로그램은 통상 수천 줄에서 수만 줄 규모였다. 요새 널리 쓰이는 프로그램들(가령 공급망 관리, 공장 자동화, 예약 시스템, 생화학 반응 시뮬레이션 프로그램 등)은 수백만 줄 이상이다. 통합전폭기 같은 무기를 통제하는 소프트웨어 프로그램은 수천만 줄 이상이다.

*****

소프트웨어를 관리하는 소프트웨어 빠르게 복잡해지고 있다. IBM은 자율 연산이라는 혁신적 개념을 개발하고 있는데, 일상적인 정보기술 지원 기능을 모두 자동화하려는 것이다. 자율 연산 체계는 모델에 따라 스스로 행동할 수 있도록 짜일 것이며 “스스로 조직화하고, 스스로 치료하고, 스스로 최적화하고, 스스로 보호할 것이다.” 자율 연산을 지원하는 소프트웨어의 코드는 수천만 줄이어야 할 것이다(각 줄마다 수십 바이트의 정보를 담는다). 그러니 정보 복잡성의 측면에서 평가할 때 소프트웨어는 이미 인간 게놈과 게놈을 돕는 분자들에 담긴 수천만 바이트 규모의 정보량을 뛰어넘었다.

*****

물론 프로그램에 담긴 정보량이 곧 복잡성의 척도인 것은 아니다.

*****

매우 길면서도 쓸모 있는 정보라곤 한 줄도 담지 않은 프로그램도 있을 수 있다. 상당히 비효율적으로 암호화된 것으로 보이는 게놈도 이건 마찬가지다. 어쨌든 그래서 소프트웨어의 복잡성을 제대로 평가할 기준을 마련하려는 시도가 종종 있었다. 일례로 미 표준기술연구소의 컴퓨터 공학자 아서 와트슨과 토머스 맥케이브가 만든 순환복잡도 측정법이 있다. 가지치기와 결정점 구조를 고려해 프로그램 논리의 복잡도를 측정하는 기법이다. 이 지표에 따라 소프트웨어들을 평가하면 그간 복잡도가 빠르게 증가해왔다는 사실이 확인된다. 다만 생산성 배가 시간이 얼마인지는 정확한 자료가 없어 평가하기 힘들다. 요점은 요즘 산업계에 쓰이는 복잡한 소프트웨어들은 특정 뇌 영역의 신경 운동을 시뮬레이션하기 위한 프로그램이나 개별 뉴런의 생화학적 기능을 시뮬레이션하기 위한 프로그램보다 훨씬 복잡하다는 것이다. 우리는 이미 충분히 복잡한 소프트웨어를 다룰 줄 안다. 뇌가 처리하는 병렬식, 자기조직적, 프랙탈식 알고리즘을 모델링하고 시뮬레이션하기에 충분한 정도다.

*****

발전하는 알고리즘

*****

소프트웨어 알고리즘의 속도와 효율에도 급격한 개선이 이뤄지고 있다. 신호 처리, 패턴 인식, 인공지능 등에 쓰이는 프로그램의 기초 수학 함수를 푸는 여러 방법들이 하나같이 가격대 성능비 면에서 좋아지고 있다. 하드웨어와 소프트웨어 양쪽에서 편익을 얻고 있는 것이다. 풀어야 할 문제에 따라 개선 정도는 조금씩 다르지만 전반적으로는 발전 추세이다.

*****

신호 처리의 예를 보자. 컴퓨터뿐 아니라 인간의 뇌에서도 광범위하게 수행되는 집약적 연산 기능이 신호 처리다. 조지아 공대의 마크 A. 리처드와 MIT의 게리 A. 쇼는 신호 처리 알고리즘의 효율이 증가하는 추세라는 분석을 발표했다. 예를 들어보자. 신호에서 패턴을 발견하려면 편미분방정식을 풀어야 할 때가 많다. 알고리즘 전문가 존 벤틀리에 따르면 편미분방정식을 푸는 데 소요되는 연산 조작 단계 수가 지속적으로 줄어들고 있다. 대표적인 한 사례(각 차원마다 64개의 요소를 가진 3차원 격자에서 타원 편미분 해를 구하는 문제다)의 연산 수는 1945년에서 1985년까지 30만 개나 줄었다. 매년 38퍼센트씩 효율이 좋아진 셈이다(하드웨어의 개선은 전혀 포함하지 않은 것이다).

*****

또 다른 예로 전화선을 통한 정보 전달이 있다. 지난 12년간 초당 300비트에서 56,000비트로 전송량이 증가했는데, 매년 55퍼센트 늘어난 셈이다. 일부는 하드웨어 설계의 개선에서 비롯한 것이지만 대부분은 알고리즘 혁신으로 이루었다.

*****

또 하나 정보 처리에서 중요한 문제로, 푸리에 변환법을 이용하여 신호를 주파수 성분으로 분리하는 작업이 있다. 신호를 여러 사인파의 합으로 표현하는 기법으로서 컴퓨터 음성 인식을 비롯한 여러 분야의 사용자 말단에 사용되고 있다. 1965년에는 '빠른 푸리에 변환'을 위한 '라딕스-2 쿨리-터키 알고리즘'이 등장하여 1,024개 데이터를 가진 푸리에 변환의 연산 수를 200개 가까이 줄였다. 이어 한층 개선된 '라딕스-4' 방법이 등장하여 800개를 더 줄였다. 최근에는 '웨이브렛' 변환법이 도입되었는데 신호를 사인파보다 복잡한 파들로 분해할 수 있는 기법이다. 이 기법 덕에 신호를 분해하는 작업의 효율이 굉장히 극적으로 개선되었다.

*****

위에서 든 예들은 예외들이 아니다. 집약적 연산을 위한 '핵심' 알고리즘들은 하나같이 효율화를 이루었다. 정렬, 검색, 자기상관관계 측정(그리고 여타 통계학적 기법들), 정보 압축 및 압축 풀기 등의 알고리즘도 마찬가지다. 알고리즘을 병렬 처리하는 능력도 개선되었다. 하나의 방법을 여러 개의 방법으로 쪼개어 동시 수행되게 하는 것이다. 병렬 처리는 열 발산이 낮다는 장점이 있다. 뇌도 복잡한 기능을 빠르게 수행하기 위해서 병렬 처리를 널리 활용하고 있다. 기계에도 이 기법을 적용하여 최적의 연산 밀도를 얻어야 할 것이다.

*****

그런데 하드웨어의 가격대 성능비 발전과 소프트웨어의 효율 개선 사이에는 근본적인 차이가 한 가지 있다. 하드웨어의 발전은 비교적 일관되고 예측가능하다. 속도와 효율에서 새로운 단계로 도약하면 그것을 도구 삼아 더욱 기하급수적 발전을 이룰 수 있다. 반면 소프트웨어 개선은 그만큼 쉽게 예측할 수 없다. 리처드와 쇼는 소프트웨어 분야에는 '개발 시간의 웜홀'이 있다고 말한다. 단 하나의 알고리즘 개선을 통해 하드웨어가 수년간 조금씩 발전해온 것과 맞먹는 혁신을 이룰 수 있다는 뜻이다. 사실 하드웨어가 지속적으로 개량될 것이므로 소프트웨어의 지속적 발전에 크게 매달릴 이유는 없다. 그러나 알고리즘에서 돌파구를 찾아내면 전반적 연산 능력을 크게 향상시킬 수 있으므로 개발은 쉼 없이 이뤄질 것이다.

*****

지적 알고리즘을 얻어낼 궁극의 원천 기계로 인간 수준 지능을 얻기 위해 노력하는 우리에게는 확실한 전술이 하나 있다. 뇌가 활용하는 병렬식, 카오스적, 자기조직적, 프랙탈식 기법들을 역분석하여 현대적 연산 하드웨어에 옮겨 심는 것이다. 뇌와 뇌의 방법론에 대한 지식이 기하급수적으로 쌓여가고 있으며, 20년 내에 뇌를 구성하는 수백 개의 정보 처리 소영역들에 대한 상세 모델을 구축하고 시뮬레이션할 수 있을 것이다.

*****

인간 지능의 작동 원칙을 이해한다는 것은 인공지능 알고리즘 도구상자에 도구를 하나 더하는 것이다. 우리가 요즘 기계적 패턴 인식에 동원하는 인공지능 기법들은 설계자조차 예측하지 못한 미묘하고 복잡한 행위를 보여준다. 자기조직적 기법이 늘 복잡하고 지능적인 행위를 창조하는 최고의 기법인 건 아니지만, 엄격하게 사전 프로그램된 논리 체계를 피하면서 복잡성을 탄생시킬 수 있는 훌륭한 방법인 것만은 틀림 없다.

*****

사람의 뇌는 게놈으로부터 형성되는데, 게놈에 담긴 유용한 압축 정보의 양은 3천만~1억 바이트 사이다. 어떻게 그렇게 적은 정보량을 지닌 게놈으로부터 백조 개의 연결을 자랑하는 기관이 탄생하는 걸까? (뇌 구조를 묘사할 때 설명해야 할 연결에 대한 정보량이 게놈의 정보량보다 백만 배 많다.) 답은 게놈이 일련의 과정에 대한 지침만을 제공한다는 것이다. 각 과정은 나름의 카오스적 기법을 동원하여(처음에는 무작위적으로, 다음에는 자기조직적으로) 담을 수 있는 정보량을 늘려간다. 뉴런이 배선되는 과정은 상당히 무작위적이라고 알려져 있다. 개체가 환경을 경험하면 개재뉴런 연결과 신경전달물질의 농도 패턴은 실제를 더 잘 반영하는 방향으로 자기조직적으로 변화한다. 게놈이라는 프로그램이 지시하는 것은 최초의 설계뿐으로, 그리 복잡하지 않다.

*****

나는 규칙에 의존하는 전문가 시스템을 거대하게 구축함으로써 인간 지능을 프로그램할 수 있으리라고는 생각지 않는다. 거대한 유전 알고리즘을 사용해 인간 지능의 온갖 기술들을 진화시켜낼 수 있으리라고도 생각지 않는다. 라니어는 그런 식의 접근법은 국소해의 오류(비슷한 여러 설계들 중에서는 제일 낫지만 최적화 상태는 아닌 설계)에 빠지리라 지적했는데, 옳은 말이다.

*****

라니어의 비판 중 또 흥미로운 것은 리처드 도킨스의 말마따나 생물학적 진화는 “바퀴를 놓쳤다"고 지적한 것이다(바퀴를 가진 유기체는 하나도 없다는 의미에서 말이다). 사실 정확한 지적은 아니다. 단백질 수준에서는 작은 바퀴 같은 것을 거느린 유기체가 있다. 박테리아 편모의 이온 모터 같은 것이 좋은 예로, 박테리아가 3차원 환경을 휘젓고 다닐 수 있게 하는 교통 수단이다. 게다가 더 큰 유기체에서는 바퀴가 별 쓸모가 없었을 것이다. 도로가 있지 않고서야 바퀴는 소용없기 때문이다. 생물체들이 이차원 공간의 교통 수단으로 바퀴를 진화해내지 않은 것은 그 때문이다. 그러나 진화는 바퀴와 도로를 만들어낸 종을 창조했다. 간접적으로나마 수많은 바퀴들을 만들어내는 데 성공한 셈이다. 간접적이어서 안 될 이유는 없지 않은가? 우리도 늘 그러는데 말이다. 어쩌면 간접적 방법이야말로 진화의 기본 발전 방법이었다(한 단계의 산물이 다음 단계를 낳는 식이다).

*****

뇌 역분석은 개개 뉴런 차원에서만 가능한 게 아니다. 5장에서 보았듯 수백만 혹은 수십억 개 뉴런들로 이루어진 뇌 영역 자체의 기능을 병렬 알고리즘 모델로 모방할 수 있다. 약 이십여 개 영역에 대해 이미 모델이나 시뮬레이션이 성립되었다. 그런 식으로 연산을 단순화할 수 있는 것이다. 로이드 와츠, 카버 미드 등이 잘 보여준 바다.

*****

라니어는 "진정 복잡하고 혼란스런 현상이라는 것이 있다면 그것은 바로 인간"이라고 말했다. 나도 동의하지만 그게 큰 장벽이라고는 생각지 않는다. 나는 카오스 연산에 흥미를 갖고 있는데 설명하자면 우리가 어떻게 패턴 인식을 하는가의 문제이고, 인간 지능의 핵심 문제이다. 혼돈은 패턴 인식의 한 과정이다. 과정을 추동하는 힘이다. 뇌가 사용하는 방법을 기계에 적용하지 못할 이유가 없다.

*****

라니어는 또 주장한다. "진화 자체도 진화해왔다. 가령 성을 도입하는 방법 등을 알아냈다. 그런데도 진화는 어느 수준 이상 빨라지지 못했으며 비교적 느린 속도를 유지해왔다." 라니어의 말은 생물학적 진화에나 들어맞지 기술적 진화에는 해당되지 않는다. 바로 그렇기 때문에 우리는 생물학적 진화를 넘어서고자 하는 것이다. 라니어는 진화 과정의 본질 한 가지를 잊고 있다. 단계마다 더욱 강력한 기법이 탄생하여 다음 단계로의 이행을 도와준다는 사실 말이다. 우리가 생물학적 진화의 첫 발(RNA)을 떼어 오늘의 기술까지 오는 데는 수십억 년이 걸렸다. 반면 월드 와이드 웹은 불과 몇 년 만에 등장했다. 말할 것도 없이 캄브리아기의 생물종 대폭발보다 훨씬 빠른 사건이었다. 그 모든 현상들이 하나의 진화 과정의 부분이었다. 천천히 시작했다가 점차 빨라졌으며 앞으로 수십 년 동안은 눈부시게 빨라질 하나의 과정이다.

*****

라니어는 “인공지능이라는 사업은 지적 오류에서 비롯된 것"이라고 말한다. 회의주의자들은 컴퓨터가 모든 면에서 인간 지능에 맞먹는 날이 오기 전에는 계속 이처럼 물컵이 반밖에 차지 않았다고 투덜거릴 수 있다. 인공지능이 한 가지를 성취하면 성취되지 않은 다른 목표를 지적하며 성과를 깎아내린다. 인공지능 연구자들이 좌절하는 대목도 바로 여기다. 힘겹게 달성된 AI 목표는 더 이상 AI 영역 안의 일로 여겨지지 않고 유용한 일반적 기술로 취급된다. 그래서 AI는 아직 풀리지 않은 문제들로 구성된 분야라는 말까지 있다.

*****

기계의 지능은 점차 발전하고, 그들이 할 수 있는 일도 늘어난다. 이전에는 사람의 지적인 관심이 필요했던 일들도 해낸다. 좁은 영역의 AI 사례는 수백 가지나 찾을 수 있다.

*****

일례로 5장에서 얘기했던 딥 프리츠가 있다. 컴퓨터 체스 소프트웨어가 더 이상 연산 용량 증대에만 의존하지 않는다는 사례였다. 여덟 대의 개인용 컴퓨터로 구성된 2002년의 딥 프리츠는 훨씬 많은 용량을 동원했던 1997년의 IBM 딥 블루만큼 체스를 잘 둘 수 있었는데, 패턴 인식 알고리즘이 개선된 덕이었다. 소프트웨어의 지능이 질적으로 발전한 사례는 수없이 존재한다. 하지만 기계가 인간 지적 역량의 모든 분야를 남김없이 모방하게 될 때까지는 마음만 먹으면 얼마든지 기계의 능력을 폄훼할 수 있겠다.

*****

인간 지능에 대한 완벽한 모델이 구축되면 기계는 양쪽 세계의 장점들을 취한다. 유연하고 미묘한 인간적 패턴 인식 능력에다가 기계 본연의 장점, 즉 빠른 속도, 엄청난 기억 용량, 무엇보다도 지식과 기술을 쉽게 공유하는 능력까지 갖출 것이다.

*****

아날로그 처리 방식에 관한 비판

*****

동물학자이자 진화 알고리즘 과학자인 토머스 레이 같은 비판자들은 지적 컴퓨터를 예상하는 나 같은 이론가들을 가리켜 “디지털 매질의 독특한 속성을 잘 파악하지 못한다"고 한다.

*****

우선 나는 아날로그 방식과 디지털 방식을 통합하는 미래를 상상하고 있음을 밝히고 싶다. 뇌와 마찬가지 방식이다. 최근의 발전된 신경망은 상세한 뉴런 모델을 사용하는데, 사용하는 뉴런 활성화 함수는 비선형적이고 아날로그적이다. 뇌의 아날로그 기법을 모방하면 분명 여러 이점이 있다. 아날로그 기법은 생물계만의 독점 기법이 아니다. 컴퓨터를 '디지털 컴퓨터'라고 부르는 것은 제2차 세계대전 이전에 널리 쓰이던 좀 더 아날로그적인 컴퓨터들과 구분하기 위해서다. 카버 미드는 실리콘 회로들을 가지고 디지털 식으로 통제되는 아날로그 회로망을 구축하여 포유류의 뉴런 회로를 모방할 수 있음을 보여주었다. 보통의 트랜지스터들로도 쉽게 아날로그 과정을 수행할 수 있다. 트랜지스터는 사실 본질적으로는 아날로그 기기다. 출력을 문턱에서 비교하는 기제가 덧붙여져 있기 때문에 디지털 기기가 되는 것뿐이다.

*****

무엇보다도, 디지털 기법은 할 수 없는데 아날로그 기법이 할 수 있는 일이란 존재하지 않는다. 디지털 기법으로 아날로그 과정을 모방할 수는 있지만(부동 소수점 표현법을 쓰는 것이다) 역은 반드시 참이 아니다.

*****

신경 정보 처리의 복잡성에 근거한 비판

*****

뇌의 생물학적 설계는 너무나 복잡해서 비생물학적 기술로 모델링하고 시뮬레이션할 수 없다는 비판도 흔하다. 가령 토머스 레이는 이렇게 썼다.

*****

뇌와 그 구성요소들에 있어 구조와 기능은 뗄 수 없는 관계다. 순환계는 뇌를 살아 있게 해주는 동시에 뇌의 화학적 정보 처리 기능에 핵심적인 호르몬들도 운반해준다. 뉴런의 막은 뉴런의 영역과 통일성을 담보하는 구조적 요소인 동시에 탈분극 현상을 통해 신호가 전달되는 장소이기도 하다. 구조 및 생명 유지 기능을 정보 처리 기능과 떼어내어 생각할 수 없는 것이다.

*****

레이는 뇌가 보여주는 "넓은 영역의 화학적 통신 기제들"에 대해서 상세히 설명하며 위의 주장을 뒷받침한다.

*****

그러나 이 기능들을 모방한 모델을 만드는 것은 어려운 일이 아니다. 이미 연구가 진척되고 있다. 다리를 놓아주는 것은 수학이라는 언어로써, 수학적 모델을 비생물학적 구조로 풀어내는 것은(컴퓨터 시뮬레이션이라거나 본래 아날로그적인 트랜지스터들로 회로를 만든다거나 하는 일) 비교적 간단한 일이다. 순환계가 호르몬을 배달하는 일만 해도 말하자면 대역폭이 아주 낮은 현상으로서 모델로 만들고 모방하지 못할 이유가 없다. 호르몬 및 각종 화합물의 혈중 수치는 한 번에 수많은 시냅스들에 영향을 미치는 매개 변수로 작용한다.

*****

토머스 레이는 “금속으로 만든 연산 체계는 생물학과 전혀 다른 역동적 속성을 갖고 있으므로 뇌의 기능을 정확히 그대로 '복사 할 수 없다"고 결론 내린다. 그러나 신경생물학, 뇌 스캔, 뉴런 및 신경 영역 모델, 뉴런-전자기기 통신, 신경 이식물 등 관련 분야의 발전상을 확인할 때, 생물학적 정보 처리 기능의 핵심을 얼마든지 모방할 수 있다는 결론이 더 합리적이다. 뇌 기능을 복사한 것이 우리 목표에 '매우 가까운' 성과를 보이게 할 수 있다는 것이다. 가령 튜링 테스트를 통과하게 만들 수 있다는 것이다. 게다가 수학 모델을 효율적으로 적용하면 생물학적 뉴런 집합을 있는 그대로 모델링할 때 필요한 연산 용량보다 훨씬 적은 용량으로 기능을 복사할 수 있다. 4장에서 사례들을 여럿 소개했다.

*****

뇌의 복잡성

*****

토머스 레이는 뇌의 복잡성은 프로그램으로 따지면 “수십억 줄의 코드"를 갖는 셈인데, 우리는 그렇게 복잡한 체계를 만들어낼 수 없다고 말한다. 대단히 과장된 수치다. 뇌는 3천만~1억 바이트 사이의 정보를 담은 게놈으로부터 만들어지는데(압축하지 않으면 8억 바이트 정도지만 중복이 엄청난 점을 감안하면 압축률이 높을 것이다), 게놈 정보의 3분의 2 정도가 뇌의 작동 원칙을 지시하고 있다고 가정할 수 있다. 비교적 적은 분량의 설계 정보로부터 성숙한 뇌라는 수천조 바이트의 정보가 탄생되는 비법은 자기조직적 과정에다 무작위성이라는 중요한 요소를(그리고 현실 세계와의 접촉을) 더하는 것이다. 마찬가지로, 인간 수준 지능을 가진 비생물학적 개체를 만드는 비법은 수십억 개의 법칙이나 수십억 줄의 코드로 방대한 전문가 시스템을 구축하는 게 아니라, 스스로 학습하며 자기조직적인, 카오스 시스템을 구축하는 것이다. 생물학에서 영감을 얻은 그대로 말이다.

*****

레이는 또 이렇게 썼다. "어떤 공학자들은 풀러렌 스위치를 지닌 나노 분자 기기라거나 DNA 같은 컴퓨터 따위를 제안할지 모른다. 하지만 나는 그들이 뉴런을 만들 수 있을 거라고는 생각지 않는다. 뉴런은 우리가 다루는 분자들에 비하면 거의 천문학적으로 거대한 구조이기 때문이다." 내 말이 바로 그것이다. 뇌를 역분석하는 것은 생물학적 뉴런들의 까다로운 작동 과정을 있는 그대로 모사하기 위함이 아니라 정보 처리 기법의 핵심을 이해하기 위함이다. 현재 진행 중인 수십 가지 연구들이 가능성을 증명하고 있다. 뉴런 집합의 기능을 모방한 모델들은 거침없이 더욱 복잡해지고 있으며, 이는 인간의 다른 모든 기술들의 추세와 동일하다.

*****

컴퓨터의 기본 속성으로서의 이원론

*****

레드우드 신경과학 연구소의 신경과학자 안토니 벨은 뇌를 시뮬레이션하려는 연구자들이 마주칠 두 가지 난점을 지적했다. 첫째는 이렇다.

*****

컴퓨터는 본질적으로 이원적인 개체다. 물리 구조의 설계는 연산을 수행하는 논리 구조를 방해해선 안 된다. 경험상 우리는 뇌가 이원론적 개체가 아님을 안다. 컴퓨터와 프로그램은 두 개의 존재일 수 있어도 마음과 뇌는 하나다. 그러므로 뇌는 기계가 아니다. 물리적 실체가 모델(또는 프로그램)의 수행을 방해하지 않는 식으로 설계될 수 있는 유한한 모델(또는 컴퓨터)일 리 없다는 뜻이다.

*****

쉽게 반박할 수 있는 주장이다. 컴퓨터의 경우 연산을 수행하는 프로그램을 물리적 실체에서 떼어낼 수 있다는 사실은 장점이지 한계가 아니다. 게다가 ‘컴퓨터와 프로그램'이 둘이 아니라 하나로 합쳐진 전용 회로 같은 전자기기도 존재한다. 다른 프로그램을 얹을 수 없고 특정 알고리즘의 수행에만 고정된 기기들이다. 휴대폰이나 포켓 컴퓨터처럼 소프트웨어가 읽기 전용 기억장치에 저장되어 있어 변경이 불가능한 것들(펌웨어)을 가리키는 건 아니다. 프로그램을 쉽게 변형할 수 없다 해도 그것은 어차피 이원적 구조를 가진 기기이기 때문이다.

*****

내 말은 아예 프로그램이 불가능한, 전문 논리를 지닌 시스템이 있다는 것이다. 가령 특정 용도를 위해 설계된 주문형 집적회로가 그렇다(영상이나 신호 처리용 집적회로 등). 특정 알고리즘만 수행하는 기기를 만들면 비용을 아낄 수 있기 때문에 대부분의 전자 제품에는 그런 회로들이 쓰인다. 프로그램 가능한 컴퓨터는 더 비싸다. 하지만 소프트웨어를 바꾸고 업그레이드할 수 있다는 유연성 때문에 널리 쓰이는 것이다. 프로그램 가능한 컴퓨터는 어떤 기능이라도 수행할 수 있다. 신경 요소들이나 뉴런, 뇌 영역이 처리하는 알고리즘을 처리할 수 있음은 물론이다.

*****

논리 알고리즘이 처음부터 물리적 설계와 결합되어 있는 시스템을 일러 '기계가 아니다' 라고 할 근거가 없는 셈이다. 작동 원리가 이해될 수 있고, 수학적 용어로 모델링될 수 있고, 다른 체계에 설치될 수 있다면(다른 체계라는 것이 변화 불가능한 전용 논리이든 프로그램 가능한 컴퓨터의 소프트웨어든 무관하다), 그것은 기계라 볼 수 있다. 혹은 기계로 재창조 가능한 속성을 지닌 개체라 볼 수 있다. 4장에서 말했듯 뇌의 작동 원리를 파악하고, 그것을 성공적으로 모델링하여 시뮬레이션하는 데는 아무 문제가 없다. 설령 분자 수준의 상호작용부터 시작하여 거시적으로 파악하려 하더라도 말이다.

*****

벨이 “물리 구조의 설계는 연산을 수행하는 논리 구조를 방해해선 안 된다"고 한 것은 뇌는 이런 '한계'를 지니지 않았다는 걸 강조하기 위해서였다. 생각이 뇌를 형성하기도 한다는 점에서 그의 지적이 옳은 면도 있다. 뇌 스캔 연구 결과도 이 사실을 뒷받침한다. 하지만 뇌의 유연성을 물리적 면이나 논리적 면 가릴 것 없이 통째로 하나의 소프트웨어로 모델링할 수도 있다. 컴퓨터 소프트웨어가 물리적 실체와 별개의 존재라는 사실은 구조적 장점이다. 계속 더 나은 하드웨어로 바꿔가며 소프트웨어를 운용할 수 있다는 면에서라도 그렇다. 뇌의 신경 회로가 끊임없이 바뀌듯, 컴퓨터 소프트웨어를 업그레이드하거나 설계를 바꾸는 일도 가능하다.

*****

또한 소프트웨어는 놓아두고 하드웨어만 계속 업그레이드할 수도 있다. 오히려 쉽게 바꿀 수 없는 뇌 구조야말로 진정한 한계다. 뇌는 지속적으로 새로운 연결망과 신경전달물질 패턴을 만들어낼 수 있지만, 전자기기보다 백만 배 이상 느린 화학적 신호 체계를 사용한다는 한계, 두개골 안에 들어갈 수 있는 개재뉴런 연결의 수가 제한되어 있다는 한계, 비생물학적 지능과 융합되기 전에는 하드웨어를 업그레이드할 수 없다는 한계 등을 지니고 있다.

*****

차원과 반복 실행

*****

벨은 뇌의 복잡성에 대해 또 다음과 같이 말한다.

*****

분자들의 활동과 생물리학적 과정들은 뉴런 차원의 활동에 영향을 미친다. 가장 뚜렷한 네 가지만 예를 든다면 유입 자극에 대한 뉴런의 민감도(시냅스의 전달 효율과 시냅스 이후 부분의 반응성 모두), 뉴런이 신호를 발사하는 흥분도, 신호의 패턴, 새로운 시냅스가 형성될 가능성(동적 재배선) 등이 영향을 받는 것이다. 게다가 뉴런들 사이에 걸쳐 일어나는 현상들, 가령 국소 전기장이나 산화질소의 막간 확산은 각기 집단적 뉴런 점화와 세포로의 에너지 전달(혈류)에 영향을 미치는데, 또한 후자는 뉴런의 활동에 직접적으로 관련되는 현상인 것이다.

*****

이런 상호작용 목록을 끝없이 나열할 수 있다. 나는 신경조절물질이나 이온 채널, 시냅스 기제에 대해 진지하게 연구해본 사람이라면, 동시에 정직한 사람이라면, 뉴런이라는 차원을 연산의 차원으로 생각할 수 없으리라고 믿는다. 뇌 기능을 서술함에 있어서는 때로 유용한 기술적 차원이 될 수 있겠지만 말이다.

*****

벨이 여기서 하고 싶은 말은 뇌를 시뮬레이션할 때 뉴런을 기초 단위로 잡는 것은 적절하지 않다는 것이다. 그런데 이 주장은 앞서 언급했던 토머스 레이의 주장, 즉 뇌는 단순한 논리 게이트보다 훨씬 복잡한 존재라는 견해와 일맥상통하는 듯하다.

*****

글을 더 읽어보면 뚜렷해진다.

*****

뇌의 기능을 설명하면서 한 덩어리의 잘 조직된 물 분자들이나 하나의 양자 결맞음 현상이 필수적인 요인이라고 주장한다면 필시 우스꽝스러운 일이다. 하지만 이런 분자 하부 차원의 과정들이 모든 세포 속 모든 분자들의 기능을 체계적으로 뒷받침하고 있다면, 이런 과정들이 뇌 전반에서 늘 진행되며 분자들끼리의 시공간적 상호 관계를 반영하고, 기록하고, 전파하는 역할을 한다면, 또한 반응의 발생 가능성과 특이성을 증감시키는 역할을 한다면, 그때도 무시할 수 있을까? 이것은 단순한 논리 게이트와는 질적으로 다른 상황인 것이다.

*****

한편으로 벨은 여러 신경망 연구들이 쓰고 있는 뉴런과 개재뉴런 연결에 대한 단순한 모델을 비판하는 것이다. 그러나 뇌 영역 차원의 시뮬레이션은 그런 단순한 모델을 쓰지 않는다. 뇌 역분석 연구에 바탕을 둔 좀더 현실적인 수학 모델을 쓴다.

*****

벨이 진짜 하고 싶은 말은 뇌는 말할 수 없이 복잡하다는 것이다. 뇌를 이해하고, 모델로 만들고, 기능을 시뮬레이션하는 일은 매우 어려우리라 암시하고 싶은 것이다. 일단 벨은 뇌의 속성이 자기조직적이고, 카오스적이고, 프랙탈적이라는 점을 제대로 파악하지 못했다. 물론 뇌는 복잡하다. 하지만 복잡성은 가만 들여다보면 표면뿐일 때가 많다. 달리 말해 뇌의 설계 원칙은 겉모습보다는 훨씬 단순하다.

*****

2장에서 잠시 말했지만, 뇌 구조가 프랙탈 속성을 지닌다는 사실을 떠올려보자. 프랙탈은 하나의 규칙이 반복적으로 적용되어 어떤 패턴이나 설계를 낳는 것을 말한다. 규칙 자체는 단순할 때가 많지만 그것이 반복되어 생기는 결과는 꽤 복잡하다. 수학자 브누아 만델브로가 고안한 만델브로 집합이 제일 유명한 예다. 만델브로 집합을 시각적으로 표현하면 아주 복잡해보인다. 복잡한 모양 속에 또 복잡한 모양이 무한히 반복되는 듯하다. 아무리 크게 확대해서 세세히 살펴봐도 복잡함이 사라지지 않으며, 점점 더 복잡한 모양들이 등장한다. 그러나 이것을 만들어내는 공식은 놀랄 만큼 단순하다. 만델브로 집합을 나타내는 공식은 단 하나, Z=Z+C라는 것으로서 여기서 Z는 복소수(2차원이란 뜻이다)이고 C는 상수이다. 이 식을 반복적용하여 나온 결과를 2차원 평면에 표시하면 이처럼 복잡한 패턴이 그려지는 것이다.

*****

핵심은, 단순한 설계 법칙으로도 복잡해보이는 것을 창조할 수 있다는 점이다. 스티븐 울프램도 세포 자동자에 관해서 비슷한 지적을 했었다. 이 통찰은 뇌 설계에도 적용된다.

*****

압축된 게놈은 비교적 가뿐한 설계로서 요즘의 보통 소프트웨어 프로그램보다 규모가 작다. 벨이 지적했듯 실제 뇌의 능력은 훨씬 복잡해보인다. 만델브로 집합처럼 뇌는 아무리 상세히 들여다봐도 차원마다 변함 없이 복잡하게만 보인다. 거시적 차원에서 보면 뉴런들의 연결 패턴이 복잡하고, 미시적 차원에서 보면 수상돌기 같은 뉴런의 일부분이 또 복잡하다. 그런데 뇌의 상태를 그대로 기술하려면 최소 수천조 바이트가 필요하지만 뇌 설계 지침을 기술하는 데는 수천만 바이트면 충분하다. 뇌의 표면적 복잡성은 실제 설계 정보의 복잡성보다 최소 천만 배 큰 것이다. 뇌의 정보는 상당히 무작위한 형태로 출발하지만 뇌가 복잡한 환경과 상호작용하면서(학습하고 성숙하면서) 갈수록 의미 있는 형태로 변해간다.

*****

설계의 복잡성은 설계 내에 압축된 정보(게놈과 게놈을 돕는 분자들)에 달렸지 설계 법칙을 반복적으로 적용해서 등장하는 패턴의 모양에 달린 게 아니다. 게놈에 담긴 3천만에서 1억 바이트 사이의 정보량을 아주 단순한 수준이라 볼 수는 없겠지만(만델브로 집합의 공식을 이루는 6개 요소에 비교하면 무진장 복잡하다), 그래도 현행 기술로 얼마든지 다룰 만한 차원의 복잡성이다. 뇌의 물리적 실체가 가진 복잡한 겉모습에 압도된 바람에 실제 설계 정보는 프랙탈적 속성 덕분에 훨씬 단순한 수준이라는 것을 간과하는 사람들이 많다.

*****

더구나 게놈에 담긴 설계 정보는 확률적 프랙탈이다. 법칙이 적용될 때마다 조금씩 무작위적으로 변형된다는 뜻이다. 예를 들어 게놈의 정보 중 소뇌의 배선 패턴을 지정하는 내용은 극히 적다. 뇌 뉴런 중 절반 가량이 소뇌에 들어가 있는데 말이다. 유전자는 소뇌에 존재하는 네 종류 세포들의 기본적 패턴만 지정한 뒤 “이 패턴을 수십억 번 반복 적용하되 매번 조금씩 무작위 변형을 일으키라"고 명령하는 것이다. 그래서 결과는 무척 복잡해보이지만 설계 정보는 비교적 가뿐하다.

*****

뇌 설계를 현재의 컴퓨터와 비교할 수 없다는 벨의 지적은 옳다. 뇌는 하향식(모듈식) 설계로 다 설명되지 않는다. 뇌는 카오스적인, 즉 완벽히 예측할 수 없는 과정들을 창조하기 위해 확률적 프랙탈이라는 조직 방식을 쓴다. 그리고 오늘날의 수학은 카오스 시스템을 훌륭하게 시뮬레이션할 정도로 발전해 있다. 기후 패턴이나 금융 시장을 분석하는 데 쓰이는 수학이 뇌에도 적용될 수 있다.

*****

벨은 이런 방법들에 대해서 전혀 언급하지 않았다. 뇌가 통상의 논리 게이트나 통상의 소프트웨어 설계와 얼마나 다른지만 강조했다. 뇌는 기계가 아니고 기계로 모델링될 수도 없다는 그의 결론은, 따라서, 근거가 없다. 보통의 논리 게이트나 통상의 소프트웨어 구조로 뇌를 적절히 해석할 수 없다는 말은 옳지만, 그렇다고 컴퓨터로 뇌를 시뮬레이션할 수 없다는 건 아니다. 뇌 작동 원칙을 수학 용어로 표현할 수 있기 때문에, 수학적 과정이라면(카오스적인 것이라도) 뭐든지 컴퓨터에 모델링할 수 있기 때문에, 뇌를 시뮬레이션하는 것도 가능하다. 탄탄하고 발 빠르게 연구가 진행되고 있다.

*****

이처럼 회의적인 입장의 벨도 조심스럽게 낙관하는 일이 하나 있다. 과학은 생물학과 뇌를 충분히 이해하여 개선하는 수준까지 발전하리라는 점이다. 그는 말한다. “트랜스휴먼의 시대가 올 것인가? 생물학적 진화의 역사를 돌이켜보면 두 번의 강력한 선례가 있었다. 첫째는 원핵생물들이 진핵 박테리아로 진화한 것이고, 둘째는 진핵생물들이 다세포 생명체로 발전한 것이다...... 인류 역시 그런 변화를 겪을지 모른다고 나는 생각한다.".

*****

미세소관과 양자 연산에 관한 비판

*****

양자 역학은 신비롭다. 의식도 신비롭다. 증명종료 : 그러므로 양자 역학과 의식은 모종의 관계가 있다.

*****

-크리스토프 코흐, 뉴런의 미세소관이 양자 연산을 함으로써 인간 의식의 기반이 된다는 로저 펜로즈의 이론에 대한 비아냥으로

*****

지난 10년간 저명한 물리학자이자 철학자인 로저 펜로즈는 마취전문의 스튜어트 해머로프와 함께 미세소관이라는 뉴런의 하위 구조가 '양자 연산' 이란 특이한 형태의 연산을 수행한다는 주장을 전개했다. 양자 연산은 큐빗을 활용하는 연산으로서 가능한 모든 해답의 조합들을 동시에 고려한다는 점에서 극단적 병렬 처리라 할 수 있다(큐빗값의 가능한 모든 조합이 동시 점검되기 때문이다). 펜로즈는 미세소관의 양자 연산 능력 때문에 뉴런을 재창조하거나 마음 파일을 다른 곳에 이식하는 것이 어렵다고 했다.

*****

또 사람의 의식은 뇌의 양자 연산 기능에서 비롯한다고 가정했으며 생물학적 체계든 비생물학적 체계든 양자 연산을 하지 못하고서는 의식 있다 할 수 없다고 했다.

*****

뇌에서 양자 파동함수 붕괴 (위치, 스핀, 속도 등 불확실한 양자적 속성들이 관측과 함께 결정되는 것)를 감지했다고 주장하는 과학자들은 몇 있지만, 인간의 능력이 양자 연산 역량에 달렸다고 강하게 주장하는 사람은 없다.

*****

물리학자 세스 로이드는 이렇게 말했다.

*****

미세소관이 뇌에서 연산 업무를 맡고 있다는 펜로즈와 해머로프의 가정은 틀렸다고 생각한다. 뇌는 뜨겁고 축축하다. 양자 결맞음이 일어나기에 그리 적합한 환경이 아니다. 펜로즈 등이 찾고 있는 미세소관의 중첩이나 조립/분리 현상이 양자 얽힘 상태를 드러내는 것 같지도 않다…………… 물론 뇌는 구식 디지털 컴퓨터와 같지 않다. 하지만 나는 뇌가 하는 일은 대부분‘고전적' 방식으로 설명될 수 있다고 생각한다. 아주 거대한 컴퓨터를 마련하고 모든 뉴런, 수상돌기, 시냅스의 모델을 구축한다면 뇌가 하는 일의 대부분을 해낼 수 있을 것이다. 뇌가 이런 일들을 하는 데 양자 역학을 사용하고 있다고는 생각지 않는다.

*****

안토니 벨도 비슷한 발언을 했다. "초유체나 초전도체에서 관찰되는 식의 거시적인 대규모 양자 결맞음이 뇌에서도 일어난다는 증거는 없다.".

*****

뇌가 정말 양자 연산을 한다 해도 인간 수준 연산 기계를 만드는 작업에 큰 걸림돌이 되지 않는다. 뇌 업로드가 불가능한 것도 아니다. 우선, 뇌가 정말 양자 연산을 한다면 양자 연산이 가능하다는 사실만 증명될 뿐이다. 양자 연산이 전적으로 생물학적 바탕에서만 가능하다는 증거는 되지 못한다. 생물학적 양자 연산 기기가 존재한다면 그것을 복제할 수 있을 것이다. 실제로 최근에는 소규모지만 양자 컴퓨터를 성공적으로 구축한 실험 사례들이 있다. 평범한 트랜지스터조차도 전자 터널링이라는 양자 효과를 활용한다.

*****

펜로즈의 입장을 해석하면, 특정한 양자 상태 집합을 완벽하게 복제하기란 불가능하므로 뇌를 완벽하게 다운로드하는 것도 불가능하다는 뜻이다. 그런데 다운로드를 얼마나 완벽하게 해야 할까? '복사본'과 원본의 차이가 현재의 원본과 1분 전 원본의 차이 정도 되도록 다운로드할 수 있다면 족하지 않을까? 그렇다면 양자 상태를 모조리 그대로 복사할 필요가 없다. 기술이 발전할수록 복사본과 원본의 시간 차는 줄어들 것이다(1초, 1밀리초, 1마이크로초).

*****

펜로즈는 뉴런이 양자 연산의 단위가 되기에는 너무 크다(뉴런간 연결도 마찬가지다)는 지적을 받자 뉴런의 미세소관 이론을 들고 나왔다. 뇌 기능 복제의 불가능성을 주장할 요량으로 생각해낸 이론으로서 참신하긴 하지만, 진정한 장벽을 구축한 건 아니다. 신경 세포의 구조적 안정성을 맡는 미세소관이 양자 연산을 수행한다는 증거는 없으며 그것이 사고 과정에 핵심이라는 증거도 없다. 현재 우리가 뇌 용량을 계산한 바에 따르면 미세소관 양자 연산을 가정하지 않은 통상의 뉴런 모델로도 방대한 인간 지식 모델을 설명해내기에 충분하다.

*****

최근에 생물학적/비생물학적 혼합망으로 모든 생물학적 망들의 기능을 비슷하게 흉내 낸 실험들이 선보였는데, 이 또한 미세소관에 의존하지 않은 뉴런 모델로도 충분하다는 증거다. 로이드 와츠는 섬세한 청각 신호 처리 모델을 구축함으로써 청각 관련 뉴런 망을 있는 그대로 모델링했을 때보다 훨씬 적은 연산 규모로 가능하다는 것을 보여줬다. 여기서도 양자 연산은 필요하지 않았다. 나는 4장에서 다양한 뇌 영역 모델들을 소개했고, 3장에서는 다양한 뇌 영역의 기능을 적당한 모델들로 대치할 경우 필요한 총 연산 규모를 계산해보았다. 인간 수준 능력을 창조하기 위해 꼭 양자 연산이 필요하다고 결론 내렸던 경우는 하나도 없었다.

*****

뉴런에 대한 상세 모델들 중 미세소관을 고려한 것들도 있긴 하다. 수상돌기와 축색의 성장과 기능에 기여하는 역할을 미세소관에 맡겼다. 하지만 신경 영역들의 기능을 모방하는 모델을 구축할 때 반드시 미세소관을 고려해야 할 것 같지는 않다. 미세소관을 고려한 모델의 경우에도 섬유 하나하나를 고려했다기보다 전반적인 카오스적 행위를 고려한 것이었다. 게다가 설령 펜로즈-해머로프의 미세소관이 중요한 요인이라 해도, 책에서 소개한 예측들의 계산에는 큰 영향을 미치지 않는다. 미세소관 때문에 뉴런의 복잡성이 천 배 가량 증가한다고 가정해도(미세소관을 고려하지 않는 현재의 뉴런 모델들도 매우 복잡하다. 뉴런 하나당 천 개씩의 연결을 가정하며, 비선형적이다), 뇌 수준 지능을 창조하는 시간은 고작 17년 늦어진다. 10억 배 증가한다고 해도 24년 정도 늦어진다(연산 용량은 이중 기하급수적으로 성장한다는 것을 명심하라).

*****

처치-튜링 명제에 관한 비판

*****

20세기 초, 수학자 알프레드 노스 화이트헤드와 버트란드 러셀은 『프린키피아 매스매티카』라는 선구적 저작을 발표했다. 모든 수학의 토대가 되는 공리체계를 찾고자 하는 연구였다. 그들은 자연수 체계를 연역해낼 수 있는 공리 체계는 또한 모순이 없음을 증명하는 데 실패했지만, 당시 학자들은 언젠가는 증명이 가능해질 것이라 믿었다.

*****

그런데 1930년대, 쿠르트 괴델이라는 젊은 체코 수학자가 이 생각을 반박해 수학계를 발칵 뒤집었다. 괴델은 그런 체계 내에 참인지 거짓인지 증명하기가 불가능한 명제가 반드시 존재함을 증명한 것이다. 후에는 증명 불가능한 명제들이 증명 가능한 명제들만큼 흔하다는 사실도 알려졌다. 괴델의 불완전성 정리는 논리와 수학, 나아가 연산이 할 수 있는 일에 명백한 한계가 있음을 증명한 것으로, 수학 역사를 통틀어 가장 중요한 정리로 알려져 있다. 그 의미 또한 끝없는 토론의 대상이 되고 있다.

*****

한편 앨런 튜링은 연산의 속성을 이해하기 위해 연구하던 중, 비슷한 결론에 도달한다. 1936년, 튜링은 컴퓨터의 이론적 모델로서 튜링 기계라는 것을 제안하는데, 현대 연산 이론의 기초가 된 이 이론을 구축하던 중 우연히 괴델의 증명과 비슷한 내용을 발견한다. 세상에는 풀 수 없는 문제가 존재한다는 것이다. 잘 정의되고, 해가 존재함을 증명할 수 있는 문제이지만, 튜링 기계로 연산할 수 없는 문제라는 게 있다는 말이다.

*****

튜링이 상상한 이론적 기계로 풀 수 없는 문제가 있다는 게 뭐 그리 놀랄 일이냐고 생각할지 모르겠지만, 튜링이 논문에서 끌어낸 또 다른 결론을 함께 염두에 두면 얘기가 달라진다. 그것은 튜링 기계로 어떤 연산이라도 해낼 수 있다는 결론이었다. 튜링은 풀 수 없는 문제의 수는 풀 수 있는 문제의 수와 같음을 보였다. 그 수는 낮은 수준의 무한수, 이른바 가산 무한집합이다(예를 들어 정수의 수를 세는 것 등). 튜링은 또 자연수 체계를 끌어낼 수 있을 정도로 강력한 임의의 논리 체계 속에 존재하는 어떤 논리 명제의 참거짓을 결정하는 일은 그 자체가 풀 수 없는 문제의 예라고 했다. 괴델의 결론과 비슷한 것이다. (달리 말하면 모든 명제들의 참거짓을 확실히 판별할 수 있는 완벽한 방법이 없다는 것이다.)

*****

비슷한 무렵, 미국인 수학자이자 철학자 알론조 처치는 셈법 분야에서 비슷한 질문에 답하는 정리를 발표했다. 독자적으로 튜링과 동일한 결론에 도달한 것이다. 튜링, 처치, 괴델의 업적은 논리, 수학, 연산에 명백한 한계가 있음을 처음으로 보여준 것이었다.

*****

처치와 튜링은 각기 한발 더 나아간 주장을 발표했는데, 지금 와서는 합쳐서 처치-튜링 명제라 불린다. 명제에는 약한 해석과 강한 해석이 있다. 약한 해석은 이렇다. 튜링 기계가 풀지 못하는 문제는 다른 어떤 기계도 풀 수 없다. 튜링 기계는 어떤 알고리즘 과정이라도 따를 수 있다는 튜링의 증명에서 도출된 것이다. 실제 알고리즘을 따르는 기계의 행위를 묘사하는 것은 그리 어려운 일이 아니다.

*****

강한 해석은 이렇다. 튜링 기계가 풀 수 없는 문제는 사람도 풀 수 없다. 이 해석의 기저에는 사람의 사고는 사람의 뇌가 수행하는 것이고(육체의 영향도 있긴 하지만), 사람의 뇌(육체)는 물질과 에너지로 이루어져 있고, 물질과 에너지는 자연 법칙을 따르고, 자연 법칙은 수학 언어로 설명되고, 수학은 다양한 수준의 알고리즘으로 분해될 수 있다는 전제가 깔려 있다. 그러니 모든 인간 사고를 시뮬레이션하는 알고리즘이 존재한다는 것이다. 처치-튜링 명제의 강한 해석은 인간이 생각하고 알 수 있는 것이라면 뭐든지 연산할 수 있다고 주장하는 것이다.

*****

그런데 튜링의 결정 불가능한 문제 이론은 수학적으로 확실한 사실이지만, 처치-튜링 명제는 수학적 명제가 아니라는 사실을 짚고 넘어가야겠다. 다양한 모습을 띠고 있긴 하지만 일종의 추측에 가깝다. 마음의 철학을 토론하는 이들이 가장 뜨겁게 논쟁하는 주제이기도 하다.

*****

강력한 AI는 처치-튜링 명제에 뿌리를 두고 있다고 할 수 있다. 그리고 그에 대한 비판은 이렇다. 컴퓨터가 풀 수 있는 문제의 유형에는 한계가 있다. 그런데 인간들은 그런 문제들을 풀 줄 안다. 따라서 기계는 결코 인간 지능을 완벽히 모방하지 못할 것이다. 그러나 매우 근거가 부족한 결론이다. 인간이 일반적으로 그런 '결정 불가능한' 문제들을 기계보다 잘 풀 수 있다는 근거가 없다. 인간은 그런 상황에서 보통 답을 넘겨짚는다. 경험론적 기법을 적용하여(문제를 풀어줄 것으로 보이지만 제대로 기능하리라 장담할 수는 없는 방법들) 때로 성공하기도 한다. 하지만 두 가지 방법 모두 알고리즘에 기반한 과정임에 분명하고, 그렇다면 기계도 할 수 있다. 사실 그런 문제들에 대해서도 기계가 인간보다 훨씬 빠르고 정확하게 답을 찾아낼 수 있다.

*****

처치 튜링 명제의 강한 해석에 따르면 생물학적 뇌와 기계는 둘 다 물리 법칙에 종속되는 것이므로, 수학을 통해 모델을 구축하고 시뮬레이션할 수 있다는 점도 동일하다. 우리에게는 이미 뉴런의 기능을 시뮬레이션할 수 있는 능력이 있다. 천억 개 뉴런에 대해서는 왜 안 되겠는가? 천억 개 뉴런을 모방하는 시스템이라면 인간 지능만큼 복잡하고 인간 지능만큼 예측불가능할 것이다. 복잡하고 예측불가능한 결과를 내며 어떤 문제들에 대해 지적인 해답을 알려주는 컴퓨터 알고리즘이 이미 존재한다(가령 유전 알고리즘). 처치 튜링 명제는 결국 뇌와 기계는 본질적으로 다르지 않다는 것을 말해주고 있다.

*****

기계가 어떻게 경험론적 기법을 쓸 수 있는지 보려면, 풀 수 없는 문제들 중 가장 흥미로운 것으로 알려진 '비지 비버' 문제를 떠올려 보자.

*****

1962년에 티보 라도가 소개한 문제다. 특정한 상태의 수를 지닌 튜링 기계를 상상해보자. 한 마디로 내부 프로그램이 거치는 단계의 수라고 생각하면 된다. 상태의 수가 4인 튜링 기계라도 하나가 아니라 매우 여러 가지 종류를 상상할 수 있을 것이다. 상태의 수가 5인 기계도, 그 이상도 마찬가지다. 자, '비지 비버' 문제는 이렇다. 어떤 정수 n이 주어졌을 때 n 상태를 갖는 모든 튜링 기계를 만든다고 상상하자. 가능한 기계의 수는 유한할 것이다. 다음으로 그n 상태의 기계들 중 무한 루프에 빠지는(즉 영원히 멈추지 않는) 기계들을 제외한다. 마지막으로, 테이프에 1을 가장 많이 찍은 기계를 가려낸다. 이 기계가 찍은 1의 기수를 가리켜 n 상태 튜링 기계에 대한 비지 비버 해라 부른다. 라도는 모든 n에 대해 이 문제를 연산할 수 있는 알고리즘, 즉 그런 알고리즘을 수행할 수 있는 튜링 기계는 없다고 했다. 왜냐면 n 상태의 기계들을 평가하는 과정 자체가 무한 루프에 빠지기 때문이다. 가능한 모든 n 상태 튜링 기계를 상상하고 시뮬레이션하는 튜링 기계를 만들었다 해도, 무한 루프에 빠지는 기계를 시뮬레이션하는 대목이 되면 평가하는 튜링 기계 자체가 무한 루프에 빠진다.

*****

풀 수 없는 문제임엔 분명하지만 몇몇 n에 대해서는 비지 비버 함수의 해를 구할 수 있다. (흥미롭게도, 비지 비버 해를 구할 수 있는 n과 구할 수 없는 n을 가려내는 문제 또한 풀 수 없는 문제다.) 가령 n이 6일 때 비지 비버 해는 35이다. 상태수가 7인 튜링 기계는 곱셈을 수행할 수 있으며, 비지 비버 해는 훨씬 불어나서 22,961이 된다. 상태수 8인 튜링 기계는 지수를 연산할 수 있으며, 비지 비버 해는 한층 커져서 10 정도이다. 상태수 n이 커질수록 훨씬 강력한 지능이 필요하다는 점에서 이것은 매우 '지적인' 함수다.

*****

상태수가 10에 다다를 즈음이면 튜링 기계는 인간은 하지 못하는 온갖 연산을 하게 될 것이다. 따라서 10에 대한 비지 비버 해를 구하는 것은 컴퓨터의 도움으로만 가능한 일일 것이다. 문제의 답을 적으려면 특별한 기수법을 발명해야 할지 모른다. 지수값이 층층이 쌓이는데, 그 정도는 또 다른 지수값이 결정하고, 그 지수값은 또 다른 지수값에 의해 결정되는 식일 것이다. 컴퓨터는 그런 복잡한 수도 쉽게 연산할 수 있지만 인간은 하지 못한다. 따라서 컴퓨터는 결정 불가능한 문제를 풀 때도 인간보다 뛰어날 것이다.

*****

실패율에 대한 지적

*****

제이론 라니어, 토머스 레이 등은 공통적으로 기술의 실패율이 높다고 지적하며 그것이 기하급수적 성장에 장애가 되리라 주장한다. 레이는 말한다.

*****

우리가 창조한 복잡한 구조물들은 심란할 정도로 높은 실패율을 보인다. 정지 궤도 위성이나 망원경, 우주 왕복선, 성간 탐사선, 펜티엄 칩, 컴퓨터 운영 체제, 이 모두는 일반적 접근법을 통해 우리가 얻을 수 있는 최대 효율 한계에 바짝 다가간 것으로 보인다.……….…… 현존하는 가장 복잡한 소프트웨어의(운영 체제나 원격통신 통제 시스템 등) 코드는 수천만 줄에 달한다. 현재로서는 수억 줄이나 수십억 줄 코드의 소프트웨어를 만들고 관리하기란 불가능할 것 같다.

*****

첫째, 레이가 말하는 심란할 정도로 높은 실패율이 어디서 발생하고 있는지 밝혀야 할 것이다. 앞서 말했듯 극도로 세련된 컴퓨터 시스템이 비행기를 자동으로 이착륙시키고 병원 중환자실을 감시하지만 고장은 거의 나지 않는다고 봐도 좋다. 실패율이라면 인간 쪽이 훨씬 심각하다. 레이는 인텔 마이크로프로세서 칩의 예를 들지만 그런 문제들은 비교적 사소한 편이다. 그리 큰 반향을 일으키지 않았고, 곧바로 바로잡아졌다.

*****

컴퓨터 시스템의 복잡성이 빠르게 증가하고 있기는 하다. 그런데 앞으로 우리는 인간 지능을 모방할 때 뇌를 본딴 자기조직적 패러다임을 더 많이 사용하게 될 것이다. 뇌 역분석이 진척되면 패턴 인식이나 인공지능 같은 분야에 자기조직적 기법을 활용할 수 있게 된다. 그러면 통제가 어려울 정도의 복잡성을 좀더 쉽게 관리할 수 있게 된다. 즉 인간 지능을 모방하기 위해 반드시 '수십억 줄의 코드'를 가진 시스템을 짤 필요는 없다는 것이다.

*****

또한 세상의 모든 복잡한 과정에는 어쩔 수 없이 불완전한 면이 있다는 점을 인정해야 한다. 인간 지능도 절대 예외가 아니다.

*****

'속박' 효과에 대한 지적

*****

제이론 라니어 등은 '속박' 효과란 것에 대해서도 얘기했다. 구식 기술을 지원하는 기반 시설에 이미 엄청난 투자를 했기 때문에 쉽게 기술을 교체할 수 없는 상황을 말한다. 복잡하고 거대한 기반 체제의 존재가 혁신을 가로막는다는 것이다. 그들이 주로 예로 드는 분야는 교통이다. 교통 분야에서는 연산 분야처럼 급격한 발전이 이루어지지 못했다는 것이다.

*****

그런데 교통 분야의 발전을 가로막은 요인으로 속박 효과만 있는 것은 아니다. 복잡한 기반 체제의 존재가 반드시 속박을 불러온다면, 인터넷의 확장에서는 왜 그런 현상이 벌어지지 않았는가? 인터넷 역시 방대하고 복잡한 하부구조를 필요로 한다. 현 사회에서 가장 또렷한 기하급수적 성장을 보이는 것은 정보 처리 및 전달 영역이다. 한편으로는 교통 분야가 정체기에 접어든 것은(즉 S 곡선의 꼭대기에 머무르는 것은) 대부분은 아니라 해도 상당량의 교통 수요가 통신 기술로 인해 대신 충족되기 때문인지 모른다. 예를 들어 나는 미국 전역에 동료들을 두고 있다. 과거에는 사람이나 짐이 직접 이동해야 했을 일을 지금은 대부분 화상 회의로(그리고 전자적 기법을 통한 문서 교환 등으로) 처리한다. 라니어 자신도 그런 막강하고 다양한 통신 기술들을 발전시키는 데 한몫 했다. 게다가 앞으로는 나노기술을 적용한 에너지 기술 덕분에 교통 분야에서도 혁신이 일어날 것이다. 사실 현실적인 고해상도 완전몰입형 가상현실이 등장하면 굳이 한 자리에 모일 이유가 없어져 대부분의 업무가 연산이나 통신을 통해 이뤄지겠지만 말이다.

*****

5장에서 말했듯, 분자 나노기술 제조가 완전히 구현되면 에너지나 교통 분야에서도 수확 가속 법칙이 실현될 것이다. 매우 값싼 원료와 정보만으로 거의 모든 상품을 만들 수 있게 되면 전통적으로 변화가 느린 산업들도 정보기술처럼 가격대 성능비나 용량을 매년 배로 늘려가게 될 것이다. 에너지와 교통은 사실상 정보기술이 될 것이다.

*****

효율적이고, 가볍고, 싼 나노기술 태양열 집열판이 등장할 것이고, 에너지를 저장하고 배포하는 강력한 연료 전지 등의 기술도 나올 것